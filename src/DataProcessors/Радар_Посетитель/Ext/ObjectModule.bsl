
Перем ТекущийПроект;
Перем ТекущаяКонфигурация;
Перем ТекущийФорматВыгрузки;

Перем Модули Экспорт;
Перем ГлобальныеСвойства Экспорт;
Перем ГлобальныеМетоды Экспорт;

Перем КэшМодулей;
Перем Подписки;
Перем СтекПути;

Функция ПутьСуществует(Путь)
	
	Файл = Новый Файл(Путь);
	Возврат Файл.Существует();
	
КонецФункции 

Процедура ПосетитьКонфигурацию(Отчет) Экспорт
	
	ТекущийПроект = Отчет.Проект;
	
	ГлобальныеСвойства = Новый Массив;
	ГлобальныеМетоды = Новый Массив;
		
	Если ПустаяСтрока(ТекущийПроект.ПутьВыгрузки) Тогда
		ВызватьИсключение "Не указан путь выгрузки";
	КонецЕсли;
	
	Если Не ПутьСуществует(ТекущийПроект.ПутьВыгрузки) Тогда
		ВызватьИсключение "Не существует путь выгрузки";
	КонецЕсли; 
	
	ТекущийФорматВыгрузки = ТекущийПроект.ФорматВыгрузки;
	
	Если ТекущийПроект.ВнешняяКонфигурация Тогда
		Если ПустаяСтрока(ТекущийПроект.ПутьКонфигурации) Тогда
			ВызватьИсключение "Не указан путь конфигурации";
		КонецЕсли;
		Если Не ПутьСуществует(ТекущийПроект.ПутьКонфигурации) Тогда
			ВызватьИсключение "Не существует путь конфигурации";
		КонецЕсли;
		ДвоичныеДанные = Новый ДвоичныеДанные(ТекущийПроект.ПутьКонфигурации);
		//@skip-warning
		ТекущаяКонфигурация = Новый ОбъектМетаданныхКонфигурация(ДвоичныеДанные);
	Иначе
		ТекущаяКонфигурация = Метаданные;
	КонецЕсли; 
	
	Расширения = РасширенияКонфигурации.Получить(Новый Структура("Имя", "Радар"));
	
	Если Расширения.Количество() <> 1 Тогда
		ВызватьИсключение "Не удалось найти расширение 'Радар'";
	КонецЕсли; 
	
	Радар = Расширения[0];
		
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA1);
	ХешированиеДанных.Добавить(Радар.ХешСумма);
	Для Каждого Плагин Из Радар_Кэш.Плагины(ТекущийПроект) Цикл
		ХешированиеДанных.ДобавитьФайл(Плагин.ИспользуемоеИмяФайла);
	КонецЦикла; 
	ХешПроекта = ПолучитьHexСтрокуИзДвоичныхДанных(ХешированиеДанных.ХешСумма);
	
	ХешСистемыИзменился = Ложь;
	
	ЗаписьХешСуммы = РегистрыСведений.Радар_ХешСуммы.Получить(Новый Структура("Проект", ТекущийПроект));
	
	Если ХешПроекта <> ЗаписьХешСуммы.ХешСумма Тогда
		ХешСистемыИзменился = Истина;
		ЗаписьХешСуммы = РегистрыСведений.Радар_ХешСуммы.СоздатьМенеджерЗаписи();
		ЗаписьХешСуммы.Проект = ТекущийПроект;
		ЗаписьХешСуммы.ХешСумма = ХешПроекта;
		ЗаписьХешСуммы.Записать(Истина);
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ХешСистемыИзменился", ХешСистемыИзменился);
	Запрос.УстановитьПараметр("Проект", ТекущийПроект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Радар_Модули.Ссылка КАК Ссылка,
	|	Радар_Модули.Наименование КАК Наименование,
	|	Радар_ПроверкиСрезПоследних.Хэш КАК Хэш,
	|	ЛОЖЬ КАК ФайлСуществует
	|ИЗ
	|	Справочник.Радар_Модули КАК Радар_Модули
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Радар_Проверки.СрезПоследних(, Проект = &Проект) КАК Радар_ПроверкиСрезПоследних
	|		ПО (НЕ &ХешСистемыИзменился)
	|			И Радар_Модули.Ссылка = Радар_ПроверкиСрезПоследних.Модуль
	|			И Радар_Модули.Владелец = Радар_ПроверкиСрезПоследних.Проект
	|ГДЕ
	|	Радар_Модули.Владелец = &Проект
	|	И НЕ Радар_Модули.ПометкаУдаления";
	
	КэшМодулей = Запрос.Выполнить().Выгрузить();
	КэшМодулей.Индексы.Добавить("Ссылка");
	
	ДобавитьНаСтекПути(ТекущийПроект.ПутьВыгрузки);
	
	ДобавитьНаСтекПути("Ext", Перечисления.ФорматыВыгрузки.XML);
	ДобавитьНаСтекПути("Configuration", Перечисления.ФорматыВыгрузки.EDT);
	
	ДобавитьНаСтекПути("ManagedApplicationModule.bsl");
	ДобавитьИнтерфейсМодуляВОкружение();
	ПосетитьМодуль("МодульУправляемогоПриложения");
	УдалитьСоСтекаПути();
	
	ДобавитьНаСтекПути("SessionModule.bsl");
	ПосетитьМодуль("МодульСеанса");
	УдалитьСоСтекаПути();
	
	ДобавитьНаСтекПути("ExternalConnectionModule.bsl");
	ПосетитьМодуль("МодульВнешнегоСоединения");
	УдалитьСоСтекаПути();
	
	УдалитьСоСтекаПути(); // Ext/Configuration
	
	ПосетитьОбщиеМодули();
	ПосетитьДокументы();
	ПосетитьСправочники();
	ПосетитьПланыСчетов();
	ПосетитьПланыВидовХарактеристик();
	ПосетитьПланыВидовРасчета();
	ПосетитьПланыОбмена();
	ПосетитьОтчеты();
	ПосетитьОбработки();
	ПосетитьРегистрыНакопления();
	ПосетитьРегистрыСведений();
	ПосетитьРегистрыБухгалтерии();
	ПосетитьРегистрыРасчета();
	ПосетитьОбщиеКоманды();
	ПосетитьОбщиеФормы();
	ПосетитьКритерииОтбора();
	ПосетитьХранилищаНастроек();
	ПосетитьWebСервисы();
	ПосетитьHTTPСервисы();
	ПосетитьКонстанты();
	ПосетитьЖурналыДокументов();
	ПосетитьПеречисления();
	ПосетитьБизнесПроцессы();
	ПосетитьЗадачи();
	ПосетитьWSСсылки();
	ПосетитьВнешниеИсточникиДанных();
	ПосетитьГруппыКоманд();
	ПосетитьИнтерфейсы();
	ПосетитьНумераторыДокументов();
	ПосетитьОбщиеКартинки();
	ПосетитьОбщиеРеквизиты();
	ПосетитьОпределяемыеТипы();
	ПосетитьПакетыXDTO();
	ПосетитьПараметрыСеанса();
	ПосетитьПараметрыФункциональныхОпций();
	ПосетитьПодпискиНаСобытия();
	ПосетитьПодсистемы();
	ПосетитьПоследовательности();
	ПосетитьРегламентныеЗадания();
	ПосетитьРоли();
	ПосетитьСтили();
	ПосетитьЭлементыСтиля();
	ПосетитьФункциональныеОпции();
	ПосетитьЯзыки();
	
	УдалитьСоСтекаПути(); // ПутьВыгрузки
	
	УдаленныеМодули = КэшМодулей.НайтиСтроки(Новый Структура("ФайлСуществует", Ложь));
	
	Если УдаленныеМодули.Количество() > 0 Тогда
		Проверки = РегистрыСведений.Радар_Проверки.СоздатьНаборЗаписей();
		Проверки.Отбор.Регистратор.Установить(Отчет.Ссылка);
		Для Каждого Строка Из УдаленныеМодули Цикл
			Модуль = Строка.Ссылка.ПолучитьОбъект();
			Модуль.УстановитьПометкуУдаления(Истина);
			Проверка = Проверки.Добавить();
			Проверка.Регистратор = Отчет.Ссылка;
			Проверка.Период = Отчет.Дата;
			Проверка.Проект = Отчет.Проект;
			Проверка.Модуль = Строка.Ссылка;
			Проверка.НеОбнаружен = Истина;
		КонецЦикла;
		Проверки.Записать(Ложь);
	КонецЕсли; 
	
	КэшМодулей = Неопределено;
	ТекущаяКонфигурация = Неопределено;
	ТекущийПроект = Неопределено;
	
КонецПроцедуры

Функция ПутьСтрокой()
	
	Возврат СтрСоединить(СтекПути, "\"); 
		
КонецФункции 

Процедура ДобавитьНаСтекПути(Знач ЧастьПути, ФорматВыгрузки = Неопределено)
	
	Если ФорматВыгрузки <> Неопределено // ограничение указано
		И ФорматВыгрузки <> ТекущийФорматВыгрузки Тогда
		Возврат;
	КонецЕсли; 
	
	Пока СтрНачинаетсяС(ЧастьПути, "\") Цикл
		ЧастьПути = Сред(ЧастьПути, 2);
	КонецЦикла;  
	
	Пока СтрЗаканчиваетсяНа(ЧастьПути, "\") Цикл
		ЧастьПути = Лев(ЧастьПути, СтрДлина(ЧастьПути) - 1);
	КонецЦикла;
	
	СтекПути.Добавить(ЧастьПути);
	
КонецПроцедуры  

Процедура УдалитьСоСтекаПути(ФорматВыгрузки = Неопределено)
	
	Если ФорматВыгрузки <> Неопределено // ограничение указано
		И ФорматВыгрузки <> ТекущийФорматВыгрузки Тогда
		Возврат;
	КонецЕсли;
	
	СтекПути.Удалить(СтекПути.ВГраница());
	
КонецПроцедуры 

Процедура ПосетитьДокументы() Экспорт
	
	ДобавитьНаСтекПути("Documents");
	
	Для Каждого ОбъектДокумент Из ТекущаяКонфигурация.Документы Цикл
		ПосетитьОбъектДокумент(ОбъектДокумент);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры 

Процедура ПосетитьСправочники() Экспорт
	
	ДобавитьНаСтекПути("Catalogs");
	
	Для Каждого ОбъектСправочник Из ТекущаяКонфигурация.Справочники Цикл
		ПосетитьОбъектСправочник(ОбъектСправочник);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПланыСчетов() Экспорт
	
	ДобавитьНаСтекПути("ChartsOfAccounts");
	
	Для Каждого ОбъектПланСчетов Из ТекущаяКонфигурация.ПланыСчетов Цикл
		ПосетитьОбъектПланСчетов(ОбъектПланСчетов);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПланыВидовХарактеристик() Экспорт
	
	ДобавитьНаСтекПути("ChartsOfCharacteristicTypes");
	
	Для Каждого ОбъектПланВидовХарактеристик Из ТекущаяКонфигурация.ПланыВидовХарактеристик Цикл
		ПосетитьОбъектПланВидовХарактеристик(ОбъектПланВидовХарактеристик);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПланыВидовРасчета() Экспорт
	
	ДобавитьНаСтекПути("ChartsOfCalculationTypes");
	
	Для Каждого ОбъектПланВидовРасчета Из ТекущаяКонфигурация.ПланыВидовРасчета Цикл
		ПосетитьОбъектПланВидовРасчета(ОбъектПланВидовРасчета);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПланыОбмена() Экспорт
	
	ДобавитьНаСтекПути("ExchangePlans");
	
	Для Каждого ОбъектПланОбмена Из ТекущаяКонфигурация.ПланыОбмена Цикл
		ПосетитьОбъектПланОбмена(ОбъектПланОбмена);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОтчеты() Экспорт
	
	ДобавитьНаСтекПути("Reports");
	
	Для Каждого ОбъектОтчет Из ТекущаяКонфигурация.Отчеты Цикл
		ПосетитьОбъектОтчет(ОбъектОтчет);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОбработки() Экспорт
	
	ДобавитьНаСтекПути("DataProcessors");
	
	Для Каждого ОбъектОбработка Из ТекущаяКонфигурация.Обработки Цикл
		ПосетитьОбъектОбработка(ОбъектОбработка);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьРегистрыНакопления() Экспорт
	
	ДобавитьНаСтекПути("AccumulationRegisters");
	
	Для Каждого ОбъектРегистрНакопления Из ТекущаяКонфигурация.РегистрыНакопления Цикл
		ПосетитьОбъектРегистрНакопления(ОбъектРегистрНакопления);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьРегистрыБухгалтерии() Экспорт
	
	ДобавитьНаСтекПути("AccountingRegisters");
	
	Для Каждого ОбъектРегистрБухгалтерии Из ТекущаяКонфигурация.РегистрыБухгалтерии Цикл
		ПосетитьОбъектРегистрБухгалтерии(ОбъектРегистрБухгалтерии);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьРегистрыРасчета() Экспорт
	
	ДобавитьНаСтекПути("CalculationRegisters");
	
	Для Каждого ОбъектРегистрРасчета Из ТекущаяКонфигурация.РегистрыРасчета Цикл
		ПосетитьОбъектРегистрРасчета(ОбъектРегистрРасчета);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьРегистрыСведений() Экспорт
	
	ДобавитьНаСтекПути("InformationRegisters");
	
	Для Каждого ОбъектРегистрСведений Из ТекущаяКонфигурация.РегистрыСведений Цикл
		ПосетитьОбъектРегистрСведений(ОбъектРегистрСведений);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОбщиеМодули() Экспорт
	
	ДобавитьНаСтекПути("CommonModules");
		
	Для Каждого ОбъектОбщийМодуль Из ТекущаяКонфигурация.ОбщиеМодули Цикл
		ГлобальныеСвойства.Добавить(ОбъектОбщийМодуль.Имя);
		ПосетитьОбъектОбщийМодуль(ОбъектОбщийМодуль); 
	КонецЦикла;
		
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОбщиеКоманды() Экспорт
	
	ДобавитьНаСтекПути("CommonCommands");
	
	Для Каждого ОбъектКоманда Из ТекущаяКонфигурация.ОбщиеКоманды Цикл
		ПосетитьОбъектОбщаяКоманда(ОбъектКоманда);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОбщиеФормы() Экспорт
	
	ДобавитьНаСтекПути("CommonForms");
		
	Для Каждого ОбъектФорма Из ТекущаяКонфигурация.ОбщиеФормы Цикл
		ПосетитьОбъектФорма(ОбъектФорма);
	КонецЦикла;
		
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьКритерииОтбора() Экспорт
	
	ДобавитьНаСтекПути("FilterCriteria");
	
	Для Каждого ОбъектКритерийОтбора Из ТекущаяКонфигурация.КритерииОтбора Цикл
		ПосетитьОбъектКритерийОтбора(ОбъектКритерийОтбора);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьХранилищаНастроек() Экспорт
	
	ДобавитьНаСтекПути("SettingsStorages");
	
	Для Каждого ОбъектХранилищеНастроек Из ТекущаяКонфигурация.ХранилищаНастроек Цикл
		ПосетитьОбъектХранилищеНастроек(ОбъектХранилищеНастроек);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьWebСервисы()
	
	ДобавитьНаСтекПути("WebServices");
	
	Для Каждого ОбъектWebСервис Из ТекущаяКонфигурация.WebСервисы Цикл
		ПосетитьОбъектWebСервис(ОбъектWebСервис);
	КонецЦикла; 
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры 

Процедура ПосетитьHTTPСервисы()
	
	ДобавитьНаСтекПути("HTTPServices");
	
	Для Каждого ОбъектHTTPСервис Из ТекущаяКонфигурация.HTTPСервисы Цикл
		ПосетитьОбъектHTTPСервис(ОбъектHTTPСервис);
	КонецЦикла; 
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьКонстанты()
	
	ДобавитьНаСтекПути("Constants");
	
	Для Каждого ОбъектКонстанта Из ТекущаяКонфигурация.Константы Цикл
		ПосетитьОбъектКонстанта(ОбъектКонстанта)
	КонецЦикла; 
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПеречисления()
	
	ДобавитьНаСтекПути("Enums");
	
	Для Каждого ОбъектПеречисление Из ТекущаяКонфигурация.Перечисления Цикл
		ПосетитьОбъектПеречисление(ОбъектПеречисление)
	КонецЦикла; 
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьБизнесПроцессы()
	
	ДобавитьНаСтекПути("BusinessProcesses");
	
	Для Каждого ОбъектБизнесПроцесс Из ТекущаяКонфигурация.БизнесПроцессы Цикл
		ПосетитьОбъектБизнесПроцесс(ОбъектБизнесПроцесс)
	КонецЦикла; 
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьЗадачи()
	
	ДобавитьНаСтекПути("Tasks");
	
	Для Каждого ОбъектЗадача Из ТекущаяКонфигурация.Задачи Цикл
		ПосетитьОбъектЗадача(ОбъектЗадача)
	КонецЦикла; 
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьЖурналыДокументов()
	
	ДобавитьНаСтекПути("DocumentJournals");
	
	Для Каждого ОбъектЖурналДокументов Из ТекущаяКонфигурация.ЖурналыДокументов Цикл
		ПосетитьОбъектЖурналДокументов(ОбъектЖурналДокументов)
	КонецЦикла; 
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьWSСсылки()
	
	ДобавитьНаСтекПути("WSReferences");
	
	Для Каждого ОбъектWSСсылка Из ТекущаяКонфигурация.WSСсылки Цикл
		ПосетитьОбъектWSСсылка(ОбъектWSСсылка)
	КонецЦикла; 
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьВнешниеИсточникиДанных()
	
	ДобавитьНаСтекПути("ExternalDataSources");
	
	Для Каждого ОбъектВнешнийИсточникДанных Из ТекущаяКонфигурация.ВнешниеИсточникиДанных Цикл
		ПосетитьОбъектВнешнийИсточникДанных(ОбъектВнешнийИсточникДанных)
	КонецЦикла; 
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьГруппыКоманд()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектГруппаКоманд Из ТекущаяКонфигурация.ГруппыКоманд Цикл
		ПосетитьОбъектГруппаКоманд(ОбъектГруппаКоманд)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьИнтерфейсы()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектИнтерфейс Из ТекущаяКонфигурация.Интерфейсы Цикл
		ПосетитьОбъектИнтерфейс(ОбъектИнтерфейс)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьНумераторыДокументов()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектНумератор Из ТекущаяКонфигурация.НумераторыДокументов Цикл
		ПосетитьОбъектНумератор(ОбъектНумератор)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОбщиеКартинки()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектОбщаяКартинка Из ТекущаяКонфигурация.ОбщиеКартинки Цикл
		ПосетитьОбъектОбщаяКартинка(ОбъектОбщаяКартинка)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОбщиеРеквизиты()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектОбщийРеквизит Из ТекущаяКонфигурация.ОбщиеРеквизиты Цикл
		ПосетитьОбъектОбщийРеквизит(ОбъектОбщийРеквизит)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОпределяемыеТипы()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектОпределяемыйТип Из ТекущаяКонфигурация.ОпределяемыеТипы Цикл
		ПосетитьОбъектОпределяемыйТип(ОбъектОпределяемыйТип)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПакетыXDTO()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектПакетXDTO Из ТекущаяКонфигурация.ПакетыXDTO Цикл
		ПосетитьОбъектПакетXDTO(ОбъектПакетXDTO)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПараметрыСеанса()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектПараметрСеанса Из ТекущаяКонфигурация.ПараметрыСеанса Цикл
		ПосетитьОбъектПараметрСеанса(ОбъектПараметрСеанса)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьФункциональныеОпции()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектФункциональнаяОпция Из ТекущаяКонфигурация.ФункциональныеОпции Цикл
		ПосетитьОбъектФункциональнаяОпция(ОбъектФункциональнаяОпция)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПараметрыФункциональныхОпций()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектПараметрФункциональныхОпций Из ТекущаяКонфигурация.ПараметрыФункциональныхОпций Цикл
		ПосетитьОбъектПараметрФункциональныхОпций(ОбъектПараметрФункциональныхОпций)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПодпискиНаСобытия()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектПодпискаНаСобытие Из ТекущаяКонфигурация.ПодпискиНаСобытия Цикл
		ПосетитьОбъектПодпискаНаСобытие(ОбъектПодпискаНаСобытие)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПодсистемы()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектПодсистема Из ТекущаяКонфигурация.Подсистемы Цикл
		ПосетитьОбъектПодсистема(ОбъектПодсистема)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьПоследовательности()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектПоследовательность Из ТекущаяКонфигурация.Последовательности Цикл
		ПосетитьОбъектПоследовательность(ОбъектПоследовательность)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьРегламентныеЗадания()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектРегламентноеЗадание Из ТекущаяКонфигурация.РегламентныеЗадания Цикл
		ПосетитьОбъектРегламентноеЗадание(ОбъектРегламентноеЗадание)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьРоли()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектРоль Из ТекущаяКонфигурация.Роли Цикл
		ПосетитьОбъектРоль(ОбъектРоль)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьСтили()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектСтиль Из ТекущаяКонфигурация.Стили Цикл
		ПосетитьОбъектСтиль(ОбъектСтиль)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьЭлементыСтиля()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектЭлементСтиля Из ТекущаяКонфигурация.ЭлементыСтиля Цикл
		ПосетитьОбъектЭлементСтиля(ОбъектЭлементСтиля)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьЯзыки()
	
	//ДобавитьНаСтекПути("...");
	
	Для Каждого ОбъектЯзык Из ТекущаяКонфигурация.Языки Цикл
		ПосетитьОбъектЯзык(ОбъектЯзык)
	КонецЦикла; 
	
	//УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ДобавитьИнтерфейсМодуляВОкружение()
		
	Парсер = Обработки.Радар_ПарсерВстроенногоЯзыка.Создать();
	Типы = Парсер.Типы();
	
	Файл = Новый Файл(ПутьСтрокой());
	
	Если Не Файл.Существует() Тогда
		Возврат;
	КонецЕсли; 
	
	ЧтениеТекста = Новый ЧтениеТекста;
	ЧтениеТекста.Открыть(Файл.ПолноеИмя, КодировкаТекста.UTF8);
	Исходник = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();
		
	Попытка
	
		Модуль = Парсер.Разобрать(Исходник);
		
		Для Каждого Элемент Из Модуль.Интерфейс Цикл
			Если Элемент.Объявление.Тип = Типы.ОбъявлениеПеременнойМодуля Тогда
				ГлобальныеСвойства.Добавить(Элемент.Имя);
			Иначе
				ГлобальныеМетоды.Добавить(Элемент.Имя);
			КонецЕсли; 
		КонецЦикла; 
		
	Исключение
		// игнор
	КонецПопытки;
		
	Парсер.Очистить();
	
КонецПроцедуры 

Процедура ПосетитьФормы(Формы) Экспорт
	
	ДобавитьНаСтекПути("Forms");
	
	Для Каждого ОбъектФорма Из Формы Цикл
		ПосетитьОбъектФорма(ОбъектФорма);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры 

Процедура ПосетитьМодуль(Имя, Окружение = Неопределено, Свойства = Неопределено) Экспорт
	
	Файл = Новый Файл(ПутьСтрокой());
	
	Если Не Файл.Существует() Тогда
		Возврат;
	КонецЕсли; 
		
	ХешированиеДанных = Новый ХешированиеДанных(ХешФункция.SHA1);
	ХешированиеДанных.ДобавитьФайл(Файл.ПолноеИмя);
	Хэш = ПолучитьHexСтрокуИзДвоичныхДанных(ХешированиеДанных.ХешСумма);
	
	КэшМодуля = КэшМодулей.Найти(Имя, "Наименование");
	 
	Если КэшМодуля = Неопределено Тогда
		МодульОбъект = Справочники.Радар_Модули.СоздатьЭлемент();
		МодульОбъект.Владелец = ТекущийПроект;
		МодульОбъект.Наименование = Имя;
		МодульОбъект.Записать();
		КэшМодуля = КэшМодулей.Добавить();
		КэшМодуля.Наименование = Имя;
		КэшМодуля.Хэш = Хэш;
		КэшМодуля.Ссылка = МодульОбъект.Ссылка;
		КэшМодуля.ФайлСуществует = Истина;
	Иначе
		КэшМодуля.ФайлСуществует = Истина;
		Если Хэш = КэшМодуля.Хэш Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДанныеМодуля = Новый Структура;
	ДанныеМодуля.Вставить("Путь", Файл.ПолноеИмя);
	ДанныеМодуля.Вставить("Ссылка", КэшМодуля.Ссылка);
	ДанныеМодуля.Вставить("Хэш", Хэш);
	ДанныеМодуля.Вставить("Окружение", Окружение);
	ДанныеМодуля.Вставить("Свойства", Свойства);
	
	Модули.Добавить(ДанныеМодуля);
	
КонецПроцедуры 

Процедура ПосетитьОбъектHTTPСервис(ОбъектHTTPСервис) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектHTTPСервис Цикл
		Подписка.ПосетитьОбъектHTTPСервис(ОбъектHTTPСервис);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектHTTPСервис.Имя);
	
	Для Каждого ОбъектШаблонURLHTTPСервиса Из ОбъектHTTPСервис.ШаблоныURL Цикл
		ПосетитьОбъектШаблонURLHTTPСервиса(ОбъектШаблонURLHTTPСервиса)
	КонецЦикла; 
	
	ДобавитьНаСтекПути("Ext", Перечисления.ФорматыВыгрузки.XML);	
	ДобавитьНаСтекПути("Module.bsl");
	
	ПосетитьМодуль(ОбъектHTTPСервис.ПолноеИмя() + ".МодульHTTPСервиса");
	
	УдалитьСоСтекаПути();
	УдалитьСоСтекаПути(Перечисления.ФорматыВыгрузки.XML);
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектHTTPСервис Цикл
		Подписка.ПокинутьОбъектHTTPСервис(ОбъектHTTPСервис);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектWebСервис(ОбъектWebСервис) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектWebСервис Цикл
		Подписка.ПосетитьОбъектWebСервис(ОбъектWebСервис);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектWebСервис.Имя);
	
	Для Каждого ОбъектОперацияWebСервиса Из ОбъектWebСервис.Операции Цикл
		ПосетитьОбъектОперацияWebСервиса(ОбъектОперацияWebСервиса);
	КонецЦикла;
	
	ДобавитьНаСтекПути("Ext", Перечисления.ФорматыВыгрузки.XML);	
	ДобавитьНаСтекПути("Module.bsl");
	
	ПосетитьМодуль(ОбъектWebСервис.ПолноеИмя() + ".МодульWebСервиса");
	
	УдалитьСоСтекаПути();
	УдалитьСоСтекаПути(Перечисления.ФорматыВыгрузки.XML);
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектWebСервис Цикл
		Подписка.ПокинутьОбъектWebСервис(ОбъектWebСервис);
	КонецЦикла;
	
КонецПроцедуры 

Процедура ПосетитьОбъектWSСсылка(ОбъектWSСсылка) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектWSСсылка Цикл
		Подписка.ПосетитьОбъектWSСсылка(ОбъектWSСсылка);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектWSСсылка Цикл
		Подписка.ПокинутьОбъектWSСсылка(ОбъектWSСсылка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектБизнесПроцесс(ОбъектБизнесПроцесс) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектБизнесПроцесс Цикл
		Подписка.ПосетитьОбъектБизнесПроцесс(ОбъектБизнесПроцесс);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектБизнесПроцесс.Имя);
	
	СвойстваОбъекта = Новый Массив;
		
	ПосетитьСтандартныеРеквизиты(ОбъектБизнесПроцесс.СтандартныеРеквизиты, СвойстваОбъекта);
	ПосетитьРеквизиты(ОбъектБизнесПроцесс.Реквизиты, СвойстваОбъекта);
	ПосетитьТабличныеЧасти(ОбъектБизнесПроцесс.ТабличныеЧасти, СвойстваОбъекта);
	ПосетитьМакеты(ОбъектБизнесПроцесс.Макеты);
	ПосетитьКоманды(ОбъектБизнесПроцесс.Команды);
	ПосетитьФормы(ОбъектБизнесПроцесс.Формы);
	
	ПосетитьМодульОбъекта(ОбъектБизнесПроцесс, "ОкружениеОбъектаБизнесПроцесса", СвойстваОбъекта);
	ПосетитьМодульМенеджера(ОбъектБизнесПроцесс, "ОкружениеМенеджераБизнесПроцесса");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектБизнесПроцесс Цикл
		Подписка.ПокинутьОбъектБизнесПроцесс(ОбъектБизнесПроцесс);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектВнешнийИсточникДанных(ОбъектВнешнийИсточникДанных) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектВнешнийИсточникДанных Цикл
		Подписка.ПосетитьОбъектВнешнийИсточникДанных(ОбъектВнешнийИсточникДанных);
	КонецЦикла;
	
	ПосетитьТаблицы(ОбъектВнешнийИсточникДанных.Таблицы);
	ПосетитьКубы(ОбъектВнешнийИсточникДанных.Кубы);
	ПосетитьФункции(ОбъектВнешнийИсточникДанных.Функции);
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектВнешнийИсточникДанных Цикл
		Подписка.ПокинутьОбъектВнешнийИсточникДанных(ОбъектВнешнийИсточникДанных);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьФункции(Функции);
	
	Для Каждого ОбъектФункция Из Функции Цикл 
		ПосетитьОбъектФункция(ОбъектФункция);
	КонецЦикла; 
	
КонецПроцедуры 

Процедура ПосетитьТаблицы(Таблицы)
	
	Для Каждого ОбъектТаблица Из Таблицы Цикл
		ПосетитьОбъектТаблица(ОбъектТаблица);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПосетитьКубы(Кубы)
	
	Для Каждого ОбъектКуб Из Кубы Цикл
		ПосетитьОбъектКуб(ОбъектКуб);
	КонецЦикла; 
	
КонецПроцедуры 

Процедура ПосетитьОбъектГрафа(ОбъектГрафа) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектГрафа Цикл
		Подписка.ПосетитьОбъектГрафа(ОбъектГрафа);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектГрафа Цикл
		Подписка.ПокинутьОбъектГрафа(ОбъектГрафа);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектГруппаКоманд(ОбъектГруппаКоманд) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектГруппаКоманд Цикл
		Подписка.ПосетитьОбъектГруппаКоманд(ОбъектГруппаКоманд);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектГруппаКоманд Цикл
		Подписка.ПокинутьОбъектГруппаКоманд(ОбъектГруппаКоманд);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектДокумент(ОбъектДокумент) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектДокумент Цикл
		Подписка.ПосетитьОбъектДокумент(ОбъектДокумент);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектДокумент.Имя);
	
	СвойстваОбъекта = Новый Массив;
	
	ПосетитьСтандартныеРеквизиты(ОбъектДокумент.СтандартныеРеквизиты, СвойстваОбъекта);
	ПосетитьРеквизиты(ОбъектДокумент.Реквизиты, СвойстваОбъекта);
	ПосетитьТабличныеЧасти(ОбъектДокумент.ТабличныеЧасти, СвойстваОбъекта);
	ПосетитьМакеты(ОбъектДокумент.Макеты);
	ПосетитьКоманды(ОбъектДокумент.Команды);
	ПосетитьФормы(ОбъектДокумент.Формы);
			
	ПосетитьМодульОбъекта(ОбъектДокумент, "ОкружениеОбъектаДокумента", СвойстваОбъекта);
	ПосетитьМодульМенеджера(ОбъектДокумент, "ОкружениеМенеджераДокумента");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектДокумент Цикл
		Подписка.ПокинутьОбъектДокумент(ОбъектДокумент);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьМодульМенеджера(ОбъектМетаданных, Окружение, СвойстваОбъекта = Неопределено)
	
	Если ОбъектМетаданных.РасширениеКонфигурации() <> Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ДобавитьНаСтекПути("Ext", Перечисления.ФорматыВыгрузки.XML);
	ДобавитьНаСтекПути("ManagerModule.bsl");
	
	ПосетитьМодуль(ОбъектМетаданных.ПолноеИмя() + ".МодульМенеджера", Окружение, СвойстваОбъекта);
	
	УдалитьСоСтекаПути();
	УдалитьСоСтекаПути(Перечисления.ФорматыВыгрузки.XML);
	
КонецПроцедуры 

Процедура ПосетитьМодульОбъекта(ОбъектМетаданных, Окружение, СвойстваОбъекта)
	
	Если ОбъектМетаданных.РасширениеКонфигурации() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьНаСтекПути("Ext", Перечисления.ФорматыВыгрузки.XML);	
	ДобавитьНаСтекПути("ObjectModule.bsl");
	
	ПосетитьМодуль(ОбъектМетаданных.ПолноеИмя() + ".МодульОбъекта", Окружение, СвойстваОбъекта);
	
	УдалитьСоСтекаПути();
	УдалитьСоСтекаПути(Перечисления.ФорматыВыгрузки.XML);
	
КонецПроцедуры 

Процедура ПосетитьОбъектЖурналДокументов(ОбъектЖурналДокументов) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектЖурналДокументов Цикл
		Подписка.ПосетитьОбъектЖурналДокументов(ОбъектЖурналДокументов);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектЖурналДокументов.Имя);
		
	ПосетитьСтандартныеРеквизиты(ОбъектЖурналДокументов.СтандартныеРеквизиты);
	ПосетитьГрафы(ОбъектЖурналДокументов.Графы);
	ПосетитьМакеты(ОбъектЖурналДокументов.Макеты);
	ПосетитьКоманды(ОбъектЖурналДокументов.Команды);
	ПосетитьФормы(ОбъектЖурналДокументов.Формы);
			
	ПосетитьМодульМенеджера(ОбъектЖурналДокументов, "ОкружениеМенеджераЖурналаДокументов");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектЖурналДокументов Цикл
		Подписка.ПокинутьОбъектЖурналДокументов(ОбъектЖурналДокументов);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьГрафы(Графы)
	
	Для Каждого ОбъектГрафа Из Графы Цикл
		ПосетитьОбъектГрафа(ОбъектГрафа);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектЗадача(ОбъектЗадача) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектЗадача Цикл
		Подписка.ПосетитьОбъектЗадача(ОбъектЗадача);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектЗадача.Имя);
	
	СвойстваОбъекта = Новый Массив;
		
	ПосетитьСтандартныеРеквизиты(ОбъектЗадача.СтандартныеРеквизиты, СвойстваОбъекта);
	ПосетитьРеквизитыАдресации(ОбъектЗадача.РеквизитыАдресации, СвойстваОбъекта);
	ПосетитьРеквизиты(ОбъектЗадача.Реквизиты, СвойстваОбъекта);
	ПосетитьТабличныеЧасти(ОбъектЗадача.ТабличныеЧасти, СвойстваОбъекта);
	ПосетитьМакеты(ОбъектЗадача.Макеты);
	ПосетитьКоманды(ОбъектЗадача.Команды);
	ПосетитьФормы(ОбъектЗадача.Формы);
	
	ПосетитьМодульОбъекта(ОбъектЗадача, "ОкружениеОбъектаЗадачи", СвойстваОбъекта);
	ПосетитьМодульМенеджера(ОбъектЗадача, "ОкружениеМенеджераЗадачи");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектЗадача Цикл
		Подписка.ПокинутьОбъектЗадача(ОбъектЗадача);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьРеквизитыАдресации(РеквизитыАдресации, СвойстваОбъекта)
	
	Для Каждого ОбъектРеквизитАдресации Из РеквизитыАдресации Цикл
		ПосетитьОбъектРеквизитАдресации(ОбъектРеквизитАдресации);
		Если СвойстваОбъекта <> Неопределено Тогда
			СвойстваОбъекта.Добавить(ОбъектРеквизитАдресации.Имя);
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры 

Процедура ПосетитьОбъектЗначениеПеречисления(ОбъектЗначениеПеречисления) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектЗначениеПеречисления Цикл
		Подписка.ПосетитьОбъектЗначениеПеречисления(ОбъектЗначениеПеречисления);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектЗначениеПеречисления Цикл
		Подписка.ПокинутьОбъектЗначениеПеречисления(ОбъектЗначениеПеречисления);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектИзмерение(ОбъектИзмерение) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектИзмерение Цикл
		Подписка.ПосетитьОбъектИзмерение(ОбъектИзмерение);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектИзмерение Цикл
		Подписка.ПокинутьОбъектИзмерение(ОбъектИзмерение);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектИнтерфейс(ОбъектИнтерфейс) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектИнтерфейс Цикл
		Подписка.ПосетитьОбъектИнтерфейс(ОбъектИнтерфейс);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектИнтерфейс Цикл
		Подписка.ПокинутьОбъектИнтерфейс(ОбъектИнтерфейс);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектКоманда(ОбъектКоманда) 
	
	ДобавитьНаСтекПути(ОбъектКоманда.Имя);
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектКоманда Цикл
		Подписка.ПосетитьОбъектКоманда(ОбъектКоманда);
	КонецЦикла;
	
	ПосетитьМодульКоманды(ОбъектКоманда);
		
	Для Каждого Подписка Из Подписки.ПокинутьОбъектКоманда Цикл
		Подписка.ПокинутьОбъектКоманда(ОбъектКоманда);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьМодульКоманды(ОбъектМетаданных)
	
	Если ОбъектМетаданных.РасширениеКонфигурации() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьНаСтекПути("Ext", Перечисления.ФорматыВыгрузки.XML);	
	ДобавитьНаСтекПути("CommandModule.bsl");
	
	ПосетитьМодуль(ОбъектМетаданных.ПолноеИмя() + ".МодульКоманды");
	
	УдалитьСоСтекаПути();
	УдалитьСоСтекаПути(Перечисления.ФорматыВыгрузки.XML);
	
КонецПроцедуры

Процедура ПосетитьКоманды(Команды) Экспорт
	
	ДобавитьНаСтекПути("Commands");
	
	Для Каждого ОбъектКоманда Из Команды Цикл
		ПосетитьОбъектКоманда(ОбъектКоманда);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОбъектКонстанта(ОбъектКонстанта) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектКонстанта Цикл
		Подписка.ПосетитьОбъектКонстанта(ОбъектКонстанта);
	КонецЦикла;

	ДобавитьНаСтекПути(ОбъектКонстанта.Имя);
		
	ДобавитьНаСтекПути("Ext", Перечисления.ФорматыВыгрузки.XML);	
	ДобавитьНаСтекПути("ValueManagerModule.bsl");
	
	ПосетитьМодуль(ОбъектКонстанта.ПолноеИмя() + ".МодульМенеджераЗначения", "ОкружениеМенеджераЗначенияКонстанты");
	
	УдалитьСоСтекаПути();
	УдалитьСоСтекаПути(Перечисления.ФорматыВыгрузки.XML);
	
	УдалитьСоСтекаПути();

	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектКонстанта Цикл
		Подписка.ПокинутьОбъектКонстанта(ОбъектКонстанта);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектКритерийОтбора(ОбъектКритерийОтбора) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектКритерийОтбора Цикл
		Подписка.ПосетитьОбъектКритерийОтбора(ОбъектКритерийОтбора);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектКритерийОтбора.Имя);
		
	ПосетитьКоманды(ОбъектКритерийОтбора.Команды);
	ПосетитьФормы(ОбъектКритерийОтбора.Формы);
		
	ПосетитьМодульМенеджера(ОбъектКритерийОтбора, "ОкружениеМенеджераКритерияОтбора");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектКритерийОтбора Цикл
		Подписка.ПокинутьОбъектКритерийОтбора(ОбъектКритерийОтбора);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектКуб(ОбъектКуб) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектКуб Цикл
		Подписка.ПосетитьОбъектКуб(ОбъектКуб);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектКуб Цикл
		Подписка.ПокинутьОбъектКуб(ОбъектКуб);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектМакет(ОбъектМакет) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектМакет Цикл
		Подписка.ПосетитьОбъектМакет(ОбъектМакет);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектМакет Цикл
		Подписка.ПокинутьОбъектМакет(ОбъектМакет);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектНумератор(ОбъектНумератор) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектНумератор Цикл
		Подписка.ПосетитьОбъектНумератор(ОбъектНумератор);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектНумератор Цикл
		Подписка.ПокинутьОбъектНумератор(ОбъектНумератор);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектОбработка(ОбъектОбработка) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектОбработка Цикл
		Подписка.ПосетитьОбъектОбработка(ОбъектОбработка);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектОбработка.Имя);
	
	СвойстваОбъекта = Новый Массив;
	
	ПосетитьРеквизиты(ОбъектОбработка.Реквизиты, СвойстваОбъекта);
	ПосетитьТабличныеЧасти(ОбъектОбработка.ТабличныеЧасти, СвойстваОбъекта);
	ПосетитьМакеты(ОбъектОбработка.Макеты);
	ПосетитьКоманды(ОбъектОбработка.Команды);
	ПосетитьФормы(ОбъектОбработка.Формы);
		
	ПосетитьМодульОбъекта(ОбъектОбработка, "ОкружениеОбъектаОбработки", СвойстваОбъекта);
	ПосетитьМодульМенеджера(ОбъектОбработка, "ОкружениеМенеджераОбработки");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектОбработка Цикл
		Подписка.ПокинутьОбъектОбработка(ОбъектОбработка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектОбщаяКартинка(ОбъектОбщаяКартинка) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектОбщаяКартинка Цикл
		Подписка.ПосетитьОбъектОбщаяКартинка(ОбъектОбщаяКартинка);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектОбщаяКартинка Цикл
		Подписка.ПокинутьОбъектОбщаяКартинка(ОбъектОбщаяКартинка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектОбщаяКоманда(ОбъектОбщаяКоманда) 
	
	ДобавитьНаСтекПути(ОбъектОбщаяКоманда.Имя);
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектОбщаяКоманда Цикл
		Подписка.ПосетитьОбъектОбщаяКоманда(ОбъектОбщаяКоманда);
	КонецЦикла;
	
	ПосетитьМодульКоманды(ОбъектОбщаяКоманда);
		
	Для Каждого Подписка Из Подписки.ПокинутьОбъектОбщаяКоманда Цикл
		Подписка.ПокинутьОбъектОбщаяКоманда(ОбъектОбщаяКоманда);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОбъектОбщийМодуль(ОбъектОбщийМодуль) 
	
	ДобавитьНаСтекПути(ОбъектОбщийМодуль.Имя);
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектОбщийМодуль Цикл
		Подписка.ПосетитьОбъектОбщийМодуль(ОбъектОбщийМодуль);
	КонецЦикла;
	
	ПосетитьОбщийМодуль(ОбъектОбщийМодуль);
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектОбщийМодуль Цикл
		Подписка.ПокинутьОбъектОбщийМодуль(ОбъектОбщийМодуль);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Процедура ПосетитьОбщийМодуль(ОбъектОбщийМодуль)
	
	Если ОбъектОбщийМодуль.РасширениеКонфигурации() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьНаСтекПути("Ext", Перечисления.ФорматыВыгрузки.XML);	
	ДобавитьНаСтекПути("Module.bsl");
	
	ПосетитьМодуль(ОбъектОбщийМодуль.ПолноеИмя() + ".ОбщийМодуль");
	Если ОбъектОбщийМодуль.Глобальный Тогда
		ДобавитьИнтерфейсМодуляВОкружение();
	КонецЕсли;
	
	УдалитьСоСтекаПути();
	УдалитьСоСтекаПути(Перечисления.ФорматыВыгрузки.XML);
	
КонецПроцедуры

Процедура ПосетитьОбъектОбщийРеквизит(ОбъектОбщийРеквизит)
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектОбщийРеквизит Цикл
		Подписка.ПосетитьОбъектОбщийРеквизит(ОбъектОбщийРеквизит);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектОбщийРеквизит Цикл
		Подписка.ПокинутьОбъектОбщийРеквизит(ОбъектОбщийРеквизит);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектОперацияWebСервиса(ОбъектОперацияWebСервиса) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектОперацияWebСервиса Цикл
		Подписка.ПосетитьОбъектОперацияWebСервиса(ОбъектОперацияWebСервиса);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектОперацияWebСервиса Цикл
		Подписка.ПокинутьОбъектОперацияWebСервиса(ОбъектОперацияWebСервиса);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектОпределяемыйТип(ОбъектОпределяемыйТип) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектОпределяемыйТип Цикл
		Подписка.ПосетитьОбъектОпределяемыйТип(ОбъектОпределяемыйТип);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектОпределяемыйТип Цикл
		Подписка.ПокинутьОбъектОпределяемыйТип(ОбъектОпределяемыйТип);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектОтчет(ОбъектОтчет) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектОтчет Цикл
		Подписка.ПосетитьОбъектОтчет(ОбъектОтчет);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектОтчет.Имя);
	
	СвойстваОбъекта = Новый Массив;
	
	ПосетитьРеквизиты(ОбъектОтчет.Реквизиты, СвойстваОбъекта);
	ПосетитьТабличныеЧасти(ОбъектОтчет.ТабличныеЧасти, СвойстваОбъекта);
	ПосетитьМакеты(ОбъектОтчет.Макеты);
	ПосетитьКоманды(ОбъектОтчет.Команды);
	ПосетитьФормы(ОбъектОтчет.Формы);
	
	ПосетитьМодульОбъекта(ОбъектОтчет, "ОкружениеОбъектаОтчета", СвойстваОбъекта);
	ПосетитьМодульМенеджера(ОбъектОтчет, "ОкружениеМенеджераОтчета");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектОтчет Цикл
		Подписка.ПокинутьОбъектОтчет(ОбъектОтчет);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПакетXDTO(ОбъектПакетXDTO) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПакетXDTO Цикл
		Подписка.ПосетитьОбъектПакетXDTO(ОбъектПакетXDTO);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПакетXDTO Цикл
		Подписка.ПокинутьОбъектПакетXDTO(ОбъектПакетXDTO);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПараметрWebСервиса(ОбъектПараметрWebСервиса) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПараметрWebСервиса Цикл
		Подписка.ПосетитьОбъектПараметрWebСервиса(ОбъектПараметрWebСервиса);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПараметрWebСервиса Цикл
		Подписка.ПокинутьОбъектПараметрWebСервиса(ОбъектПараметрWebСервиса);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПараметрСеанса(ОбъектПараметрСеанса) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПараметрСеанса Цикл
		Подписка.ПосетитьОбъектПараметрСеанса(ОбъектПараметрСеанса);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПараметрСеанса Цикл
		Подписка.ПокинутьОбъектПараметрСеанса(ОбъектПараметрСеанса);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПараметрФункциональныхОпций(ОбъектПараметрФункциональныхОпций) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПараметрФункциональныхОпций Цикл
		Подписка.ПосетитьОбъектПараметрФункциональныхОпций(ОбъектПараметрФункциональныхОпций);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПараметрФункциональныхОпций Цикл
		Подписка.ПокинутьОбъектПараметрФункциональныхОпций(ОбъектПараметрФункциональныхОпций);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПерерасчет(ОбъектПерерасчет) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПерерасчет Цикл
		Подписка.ПосетитьОбъектПерерасчет(ОбъектПерерасчет);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПерерасчет Цикл
		Подписка.ПокинутьОбъектПерерасчет(ОбъектПерерасчет);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПеречисление(ОбъектПеречисление) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПеречисление Цикл
		Подписка.ПосетитьОбъектПеречисление(ОбъектПеречисление);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектПеречисление.Имя);
	
	СвойстваОбъекта = Новый Массив;
	
	ПосетитьСтандартныеРеквизиты(ОбъектПеречисление.СтандартныеРеквизиты);
	ПосетитьЗначенияПеречисления(ОбъектПеречисление.ЗначенияПеречисления, СвойстваОбъекта);
	ПосетитьМакеты(ОбъектПеречисление.Макеты);
	ПосетитьКоманды(ОбъектПеречисление.Команды);
	ПосетитьФормы(ОбъектПеречисление.Формы);
			
	ПосетитьМодульМенеджера(ОбъектПеречисление, "ОкружениеМенеджераПеречисления", СвойстваОбъекта);
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектПеречисление Цикл
		Подписка.ПокинутьОбъектПеречисление(ОбъектПеречисление);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьЗначенияПеречисления(ЗначенияПеречисления, СвойстваОбъекта)
	
	Для Каждого ОбъектЗначениеПеречисления Из ЗначенияПеречисления Цикл
		ПосетитьОбъектЗначениеПеречисления(ОбъектЗначениеПеречисления);
		Если СвойстваОбъекта <> Неопределено Тогда
			СвойстваОбъекта.Добавить(ОбъектЗначениеПеречисления.Имя);
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры 

Процедура ПосетитьОбъектПланВидовРасчета(ОбъектПланВидовРасчета) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПланВидовРасчета Цикл
		Подписка.ПосетитьОбъектПланВидовРасчета(ОбъектПланВидовРасчета);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектПланВидовРасчета.Имя);
	
	СвойстваОбъекта = Новый Массив;
		
	// TODO: добавить предопределенные в свойства менеджера если радар установлен на анализируемой конфигурации
	
	ПосетитьСтандартныеРеквизиты(ОбъектПланВидовРасчета.СтандартныеРеквизиты, СвойстваОбъекта);
	ПосетитьРеквизиты(ОбъектПланВидовРасчета.Реквизиты, СвойстваОбъекта);
	ПосетитьТабличныеЧасти(ОбъектПланВидовРасчета.ТабличныеЧасти, СвойстваОбъекта);
	ПосетитьМакеты(ОбъектПланВидовРасчета.Макеты);
	ПосетитьКоманды(ОбъектПланВидовРасчета.Команды);
	ПосетитьФормы(ОбъектПланВидовРасчета.Формы);
	
	ПосетитьМодульОбъекта(ОбъектПланВидовРасчета, "ОкружениеОбъектаПланаВидовРасчета", СвойстваОбъекта);
	ПосетитьМодульМенеджера(ОбъектПланВидовРасчета, "ОкружениеМенеджераПланаВидовРасчета");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектПланВидовРасчета Цикл
		Подписка.ПокинутьОбъектПланВидовРасчета(ОбъектПланВидовРасчета);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПланВидовХарактеристик(ОбъектПланВидовХарактеристик) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПланВидовХарактеристик Цикл
		Подписка.ПосетитьОбъектПланВидовХарактеристик(ОбъектПланВидовХарактеристик);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектПланВидовХарактеристик.Имя);
	
	СвойстваОбъекта = Новый Массив;
		
	// TODO: добавить предопределенные в свойства менеджера если радар установлен на анализируемой конфигурации
	
	ПосетитьСтандартныеРеквизиты(ОбъектПланВидовХарактеристик.СтандартныеРеквизиты, СвойстваОбъекта);
	ПосетитьРеквизиты(ОбъектПланВидовХарактеристик.Реквизиты, СвойстваОбъекта);
	ПосетитьТабличныеЧасти(ОбъектПланВидовХарактеристик.ТабличныеЧасти, СвойстваОбъекта);
	ПосетитьМакеты(ОбъектПланВидовХарактеристик.Макеты);
	ПосетитьКоманды(ОбъектПланВидовХарактеристик.Команды);
	ПосетитьФормы(ОбъектПланВидовХарактеристик.Формы);
	
	ПосетитьМодульОбъекта(ОбъектПланВидовХарактеристик, "ОкружениеОбъектаПланаВидовХарактеристик", СвойстваОбъекта);
	ПосетитьМодульМенеджера(ОбъектПланВидовХарактеристик, "ОкружениеМенеджераПланаВидовХарактеристик");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектПланВидовХарактеристик Цикл
		Подписка.ПокинутьОбъектПланВидовХарактеристик(ОбъектПланВидовХарактеристик);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПланОбмена(ОбъектПланОбмена) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПланОбмена Цикл
		Подписка.ПосетитьОбъектПланОбмена(ОбъектПланОбмена);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектПланОбмена.Имя);
	
	СвойстваОбъекта = Новый Массив;
		
	ПосетитьСтандартныеРеквизиты(ОбъектПланОбмена.СтандартныеРеквизиты, СвойстваОбъекта);
	ПосетитьРеквизиты(ОбъектПланОбмена.Реквизиты, СвойстваОбъекта);
	ПосетитьТабличныеЧасти(ОбъектПланОбмена.ТабличныеЧасти, СвойстваОбъекта);
	ПосетитьМакеты(ОбъектПланОбмена.Макеты);
	ПосетитьКоманды(ОбъектПланОбмена.Команды);
	ПосетитьФормы(ОбъектПланОбмена.Формы);
	
	ПосетитьМодульОбъекта(ОбъектПланОбмена, "ОкружениеОбъектаПланаОбмена", СвойстваОбъекта);
	ПосетитьМодульМенеджера(ОбъектПланОбмена, "ОкружениеМенеджераПланаОбмена");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектПланОбмена Цикл
		Подписка.ПокинутьОбъектПланОбмена(ОбъектПланОбмена);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПланСчетов(ОбъектПланСчетов) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПланСчетов Цикл
		Подписка.ПосетитьОбъектПланСчетов(ОбъектПланСчетов);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектПланСчетов.Имя);
	
	СвойстваОбъекта = Новый Массив;
		
	// TODO: добавить предопределенные в свойства менеджера если радар установлен на анализируемой конфигурации
	
	ПосетитьСтандартныеРеквизиты(ОбъектПланСчетов.СтандартныеРеквизиты, СвойстваОбъекта);
	ПосетитьРеквизиты(ОбъектПланСчетов.Реквизиты, СвойстваОбъекта);
	ПосетитьТабличныеЧасти(ОбъектПланСчетов.ТабличныеЧасти, СвойстваОбъекта);
	ПосетитьПризнакиУчетаПланаСчетов(ОбъектПланСчетов.ПризнакиУчета);
	ПосетитьПризнакиУчетаСубконтоПланаСчетов(ОбъектПланСчетов.ПризнакиУчетаСубконто);
	ПосетитьМакеты(ОбъектПланСчетов.Макеты);
	ПосетитьКоманды(ОбъектПланСчетов.Команды);
	ПосетитьФормы(ОбъектПланСчетов.Формы);
	
	ПосетитьМодульОбъекта(ОбъектПланСчетов, "ОкружениеОбъектаПланаСчетов", СвойстваОбъекта);
	ПосетитьМодульМенеджера(ОбъектПланСчетов, "ОкружениеМенеджераПланаСчетов");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектПланСчетов Цикл
		Подписка.ПокинутьОбъектПланСчетов(ОбъектПланСчетов);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьПризнакиУчетаПланаСчетов(ПризнакиУчетаПланаСчетов)
	
	Для Каждого ОбъектПризнакУчетаПланаСчетов Из ПризнакиУчетаПланаСчетов Цикл
		ПосетитьОбъектПризнакУчетаПланаСчетов(ОбъектПризнакУчетаПланаСчетов);
	КонецЦикла; 
	
КонецПроцедуры 

Процедура ПосетитьПризнакиУчетаСубконтоПланаСчетов(ПризнакиУчетаСубконтоПланаСчетов)
	
	Для Каждого ОбъектПризнакУчетаСубконтоПланаСчетов Из ПризнакиУчетаСубконтоПланаСчетов Цикл
		ПосетитьОбъектПризнакУчетаСубконтоПланаСчетов(ОбъектПризнакУчетаСубконтоПланаСчетов);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПосетитьОбъектПодпискаНаСобытие(ОбъектПодпискаНаСобытие) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПодпискаНаСобытие Цикл
		Подписка.ПосетитьОбъектПодпискаНаСобытие(ОбъектПодпискаНаСобытие);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПодпискаНаСобытие Цикл
		Подписка.ПокинутьОбъектПодпискаНаСобытие(ОбъектПодпискаНаСобытие);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПодсистема(ОбъектПодсистема) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПодсистема Цикл
		Подписка.ПосетитьОбъектПодсистема(ОбъектПодсистема);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПодсистема Цикл
		Подписка.ПокинутьОбъектПодсистема(ОбъектПодсистема);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПоле(ОбъектПоле) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПоле Цикл
		Подписка.ПосетитьОбъектПоле(ОбъектПоле);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПоле Цикл
		Подписка.ПокинутьОбъектПоле(ОбъектПоле);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПоследовательность(ОбъектПоследовательность) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПоследовательность Цикл
		Подписка.ПосетитьОбъектПоследовательность(ОбъектПоследовательность);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПоследовательность Цикл
		Подписка.ПокинутьОбъектПоследовательность(ОбъектПоследовательность);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПризнакУчетаПланаСчетов(ОбъектПризнакУчетаПланаСчетов) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПризнакУчетаПланаСчетов Цикл
		Подписка.ПосетитьОбъектПризнакУчетаПланаСчетов(ОбъектПризнакУчетаПланаСчетов);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПризнакУчетаПланаСчетов Цикл
		Подписка.ПокинутьОбъектПризнакУчетаПланаСчетов(ОбъектПризнакУчетаПланаСчетов);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектПризнакУчетаСубконтоПланаСчетов(ОбъектПризнакУчетаСубконтоПланаСчетов) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектПризнакУчетаСубконтоПланаСчетов Цикл
		Подписка.ПосетитьОбъектПризнакУчетаСубконтоПланаСчетов(ОбъектПризнакУчетаСубконтоПланаСчетов);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектПризнакУчетаСубконтоПланаСчетов Цикл
		Подписка.ПокинутьОбъектПризнакУчетаСубконтоПланаСчетов(ОбъектПризнакУчетаСубконтоПланаСчетов);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектРегистрБухгалтерии(ОбъектРегистрБухгалтерии) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектРегистрБухгалтерии Цикл
		Подписка.ПосетитьОбъектРегистрБухгалтерии(ОбъектРегистрБухгалтерии);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектРегистрБухгалтерии.Имя);
	
	ПосетитьСтандартныеРеквизиты(ОбъектРегистрБухгалтерии.СтандартныеРеквизиты);
	ПосетитьИзмерения(ОбъектРегистрБухгалтерии.Измерения);
	ПосетитьРесурсы(ОбъектРегистрБухгалтерии.Ресурсы);
	ПосетитьРеквизиты(ОбъектРегистрБухгалтерии.Реквизиты);
	ПосетитьМакеты(ОбъектРегистрБухгалтерии.Макеты);
	ПосетитьКоманды(ОбъектРегистрБухгалтерии.Команды);
	ПосетитьФормы(ОбъектРегистрБухгалтерии.Формы);
	
	ПосетитьМодульНабораЗаписей(ОбъектРегистрБухгалтерии, "ОкружениеНабораЗаписейРегистраБухгалтерии");
	ПосетитьМодульМенеджера(ОбъектРегистрБухгалтерии, "ОкружениеМенеджераРегистраБухгалтерии"); 
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектРегистрБухгалтерии Цикл
		Подписка.ПокинутьОбъектРегистрБухгалтерии(ОбъектРегистрБухгалтерии);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектРегистрНакопления(ОбъектРегистрНакопления) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектРегистрНакопления Цикл
		Подписка.ПосетитьОбъектРегистрНакопления(ОбъектРегистрНакопления);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектРегистрНакопления.Имя);
	
	ПосетитьСтандартныеРеквизиты(ОбъектРегистрНакопления.СтандартныеРеквизиты);
	ПосетитьИзмерения(ОбъектРегистрНакопления.Измерения);
	ПосетитьРесурсы(ОбъектРегистрНакопления.Ресурсы);
	ПосетитьРеквизиты(ОбъектРегистрНакопления.Реквизиты);
	ПосетитьМакеты(ОбъектРегистрНакопления.Макеты);
	ПосетитьКоманды(ОбъектРегистрНакопления.Команды);
	ПосетитьФормы(ОбъектРегистрНакопления.Формы);
	
	ПосетитьМодульНабораЗаписей(ОбъектРегистрНакопления, "ОкружениеНабораЗаписейРегистраНакопления");
	ПосетитьМодульМенеджера(ОбъектРегистрНакопления, "ОкружениеМенеджераРегистраНакопления"); 
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектРегистрНакопления Цикл
		Подписка.ПокинутьОбъектРегистрНакопления(ОбъектРегистрНакопления);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьРесурсы(Ресурсы)
	
	Для Каждого ОбъектРесурс Из Ресурсы Цикл
		ПосетитьОбъектРесурс(ОбъектРесурс);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьИзмерения(Измерения)
	
	Для Каждого ОбъектИзмерение Из Измерения Цикл
		ПосетитьОбъектИзмерение(ОбъектИзмерение);
	КонецЦикла;
	
КонецПроцедуры 

Процедура ПосетитьМодульНабораЗаписей(ОбъектМетаданных, Окружение)
	
	Если ОбъектМетаданных.РасширениеКонфигурации() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьНаСтекПути("Ext", Перечисления.ФорматыВыгрузки.XML);	
	ДобавитьНаСтекПути("RecordSetModule.bsl");
	
	ПосетитьМодуль(ОбъектМетаданных.ПолноеИмя() + ".МодульНабораЗаписей", Окружение);
	
	УдалитьСоСтекаПути();
	УдалитьСоСтекаПути(Перечисления.ФорматыВыгрузки.XML);
	
КонецПроцедуры

Процедура ПосетитьОбъектРегистрРасчета(ОбъектРегистрРасчета) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектРегистрРасчета Цикл
		Подписка.ПосетитьОбъектРегистрРасчета(ОбъектРегистрРасчета);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектРегистрРасчета.Имя);
	
	ПосетитьСтандартныеРеквизиты(ОбъектРегистрРасчета.СтандартныеРеквизиты);
	ПосетитьИзмерения(ОбъектРегистрРасчета.Измерения);
	ПосетитьРесурсы(ОбъектРегистрРасчета.Ресурсы);
	ПосетитьРеквизиты(ОбъектРегистрРасчета.Реквизиты);
	ПосетитьПерерасчеты(ОбъектРегистрРасчета.Перерасчеты);
	ПосетитьМакеты(ОбъектРегистрРасчета.Макеты);
	ПосетитьКоманды(ОбъектРегистрРасчета.Команды);
	ПосетитьФормы(ОбъектРегистрРасчета.Формы);
	
	ПосетитьМодульНабораЗаписей(ОбъектРегистрРасчета, "ОкружениеНабораЗаписейРегистраРасчета");
	ПосетитьМодульМенеджера(ОбъектРегистрРасчета, "ОкружениеМенеджераРегистраРасчета"); 
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектРегистрРасчета Цикл
		Подписка.ПокинутьОбъектРегистрРасчета(ОбъектРегистрРасчета);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьПерерасчеты(Перерасчеты)
	
	Для Каждого ОбъектПерерасчет Из Перерасчеты Цикл
		ПосетитьОбъектПерерасчет(ОбъектПерерасчет);
	КонецЦикла; 
	
КонецПроцедуры 

Процедура ПосетитьОбъектРегистрСведений(ОбъектРегистрСведений) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектРегистрСведений Цикл
		Подписка.ПосетитьОбъектРегистрСведений(ОбъектРегистрСведений);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектРегистрСведений.Имя);
	
	ПосетитьСтандартныеРеквизиты(ОбъектРегистрСведений.СтандартныеРеквизиты);
	ПосетитьИзмерения(ОбъектРегистрСведений.Измерения);
	ПосетитьРесурсы(ОбъектРегистрСведений.Ресурсы);
	ПосетитьРеквизиты(ОбъектРегистрСведений.Реквизиты);
	ПосетитьМакеты(ОбъектРегистрСведений.Макеты);
	ПосетитьКоманды(ОбъектРегистрСведений.Команды);
	ПосетитьФормы(ОбъектРегистрСведений.Формы);
	
	ПосетитьМодульНабораЗаписей(ОбъектРегистрСведений, "ОкружениеНабораЗаписейРегистраСведений");
	ПосетитьМодульМенеджера(ОбъектРегистрСведений, "ОкружениеМенеджераРегистраСведений");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектРегистрСведений Цикл
		Подписка.ПокинутьОбъектРегистрСведений(ОбъектРегистрСведений);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектРегламентноеЗадание(ОбъектРегламентноеЗадание) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектРегламентноеЗадание Цикл
		Подписка.ПосетитьОбъектРегламентноеЗадание(ОбъектРегламентноеЗадание);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектРегламентноеЗадание Цикл
		Подписка.ПокинутьОбъектРегламентноеЗадание(ОбъектРегламентноеЗадание);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектРеквизит(ОбъектРеквизит) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектРеквизит Цикл
		Подписка.ПосетитьОбъектРеквизит(ОбъектРеквизит);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектРеквизит Цикл
		Подписка.ПокинутьОбъектРеквизит(ОбъектРеквизит);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектРеквизитАдресации(ОбъектРеквизитАдресации) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектРеквизитАдресации Цикл
		Подписка.ПосетитьОбъектРеквизитАдресации(ОбъектРеквизитАдресации);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектРеквизитАдресации Цикл
		Подписка.ПокинутьОбъектРеквизитАдресации(ОбъектРеквизитАдресации);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектРесурс(ОбъектРесурс) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектРесурс Цикл
		Подписка.ПосетитьОбъектРесурс(ОбъектРесурс);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектРесурс Цикл
		Подписка.ПокинутьОбъектРесурс(ОбъектРесурс);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектРоль(ОбъектРоль) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектРоль Цикл
		Подписка.ПосетитьОбъектРоль(ОбъектРоль);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектРоль Цикл
		Подписка.ПокинутьОбъектРоль(ОбъектРоль);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектСправочник(ОбъектСправочник) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектСправочник Цикл
		Подписка.ПосетитьОбъектСправочник(ОбъектСправочник);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектСправочник.Имя);
	
	СвойстваОбъекта = Новый Массив;
		
	// TODO: добавить предопределенные в свойства менеджера если радар установлен на анализируемой конфигурации
	
	ПосетитьСтандартныеРеквизиты(ОбъектСправочник.СтандартныеРеквизиты, СвойстваОбъекта);
	ПосетитьРеквизиты(ОбъектСправочник.Реквизиты, СвойстваОбъекта);
	ПосетитьТабличныеЧасти(ОбъектСправочник.ТабличныеЧасти, СвойстваОбъекта);
	ПосетитьМакеты(ОбъектСправочник.Макеты);
	ПосетитьКоманды(ОбъектСправочник.Команды);
	ПосетитьФормы(ОбъектСправочник.Формы);
	
	ПосетитьМодульОбъекта(ОбъектСправочник, "ОкружениеОбъектаСправочника", СвойстваОбъекта);
	ПосетитьМодульМенеджера(ОбъектСправочник, "ОкружениеМенеджераСправочника");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектСправочник Цикл
		Подписка.ПокинутьОбъектСправочник(ОбъектСправочник);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьМакеты(Макеты)
	
	Для Каждого ОбъектМакет Из Макеты Цикл
		ПосетитьОбъектМакет(ОбъектМакет);
	КонецЦикла;
	
КонецПроцедуры 

Процедура ПосетитьТабличныеЧасти(ТабличныеЧасти, СвойстваОбъекта)
	
	Для Каждого ОбъектТабличнаяЧасть Из ТабличныеЧасти Цикл
		ПосетитьОбъектТабличнаяЧасть(ОбъектТабличнаяЧасть);
		СвойстваОбъекта.Добавить(ОбъектТабличнаяЧасть.Имя);
	КонецЦикла;
	
КонецПроцедуры 

Процедура ПосетитьРеквизиты(Реквизиты, СвойстваОбъекта = Неопределено)
	
	Для Каждого ОбъектРеквизит Из Реквизиты Цикл
		ПосетитьОбъектРеквизит(ОбъектРеквизит);
		Если СвойстваОбъекта <> Неопределено Тогда
			СвойстваОбъекта.Добавить(ОбъектРеквизит.Имя);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры 

Процедура ПосетитьСтандартныеРеквизиты(СтандартныеРеквизиты, СвойстваОбъекта = Неопределено)
	
	Для Каждого ОписаниеСтандартногоРеквизита Из СтандартныеРеквизиты Цикл
		ПосетитьОписаниеСтандартногоРеквизита(ОписаниеСтандартногоРеквизита);
		Если СвойстваОбъекта <> Неопределено Тогда
			СвойстваОбъекта.Добавить(ОписаниеСтандартногоРеквизита.Имя);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры 

Процедура ПосетитьОбъектСтиль(ОбъектСтиль) 
	Для Каждого Подписка Из Подписки.ПосетитьОбъектСтиль Цикл
		Подписка.ПосетитьОбъектСтиль(ОбъектСтиль);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектСтиль Цикл
		Подписка.ПокинутьОбъектСтиль(ОбъектСтиль);
	КонецЦикла;
КонецПроцедуры

Процедура ПосетитьОбъектТаблица(ОбъектТаблица) 
	Для Каждого Подписка Из Подписки.ПосетитьОбъектТаблица Цикл
		Подписка.ПосетитьОбъектТаблица(ОбъектТаблица);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектТаблица Цикл
		Подписка.ПокинутьОбъектТаблица(ОбъектТаблица);
	КонецЦикла;
КонецПроцедуры

Процедура ПосетитьОбъектТаблицаИзмерения(ОбъектТаблицаИзмерения) 
	Для Каждого Подписка Из Подписки.ПосетитьОбъектТаблицаИзмерения Цикл
		Подписка.ПосетитьОбъектТаблицаИзмерения(ОбъектТаблицаИзмерения);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектТаблицаИзмерения Цикл
		Подписка.ПокинутьОбъектТаблицаИзмерения(ОбъектТаблицаИзмерения);
	КонецЦикла;
КонецПроцедуры

Процедура ПосетитьОбъектТабличнаяЧасть(ОбъектТабличнаяЧасть) 
	Для Каждого Подписка Из Подписки.ПосетитьОбъектТабличнаяЧасть Цикл
		Подписка.ПосетитьОбъектТабличнаяЧасть(ОбъектТабличнаяЧасть);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектТабличнаяЧасть Цикл
		Подписка.ПокинутьОбъектТабличнаяЧасть(ОбъектТабличнаяЧасть);
	КонецЦикла;
КонецПроцедуры

Процедура ПосетитьОбъектФорма(ОбъектФорма) 
	
	Если ОбъектФорма.РасширениеКонфигурации() <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьНаСтекПути(ОбъектФорма.Имя);
			
	ДобавитьНаСтекПути("Ext\Form.xml", Перечисления.ФорматыВыгрузки.XML);
	ДобавитьНаСтекПути("Form.form", Перечисления.ФорматыВыгрузки.EDT);
	
	Свойства = Новый Массив;
	
	Окружение = "ОкружениеФормы";
	
	ДанныеФормы = ДанныеФормы();
	
	Если ДанныеФормы.ОсновнойРеквизит <> Неопределено Тогда
		Тип = ДанныеФормы.ОсновнойРеквизит.Тип;
		Если СтрНачинаетсяС(Тип, "CatalogObject") Тогда
			Окружение = "ОкружениеФормыСправочника";
		ИначеЕсли СтрНачинаетсяС(Тип, "DocumentObject") Тогда
			Окружение = "ОкружениеФормыДокумента";	
		ИначеЕсли СтрНачинаетсяС(Тип, "DataProcessorObject") Тогда
			Окружение = "ОкружениеФормыОбработки";
		ИначеЕсли СтрНачинаетсяС(Тип, "InformationRegisterRecordManager") Тогда
			Окружение = "ОкружениеФормыЗаписиРегистраСведений";	
		ИначеЕсли СтрНачинаетсяС(Тип, "InformationRegisterRecordSet") Тогда
			Окружение = "ОкружениеФормыНабораЗаписейРегистраСведений";	
		ИначеЕсли СтрНачинаетсяС(Тип, "ReportObject") Тогда
			Окружение = "ОкружениеФормыОтчета";
		ИначеЕсли СтрНачинаетсяС(Тип, "ConstantsSet") Тогда
			Окружение = "ОкружениеФормыНабораКонстант";
		ИначеЕсли СтрНачинаетсяС(Тип, "ChartOfCharacteristicTypesObject") Тогда
			Окружение = "ОкружениеФормыПланаВидовХарактеристик";
		ИначеЕсли СтрНачинаетсяС(Тип, "BusinessProcessObject") Тогда
			Окружение = "ОкружениеФормыБизнесПроцесса";	
		ИначеЕсли СтрНачинаетсяС(Тип, "TaskObject") Тогда
			Окружение = "ОкружениеФормыЗадачи";	
		КонецЕсли; 
	КонецЕсли; 
	
	Для Каждого Реквизит Из ДанныеФормы.Реквизиты Цикл
		Свойства.Добавить(Реквизит.Имя);
	КонецЦикла;
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектФорма Цикл
		Подписка.ПосетитьОбъектФорма(ОбъектФорма);
	КонецЦикла;
	
	УдалитьСоСтекаПути();
	
	ДобавитьНаСтекПути("Ext\Form", Перечисления.ФорматыВыгрузки.XML);
	ДобавитьНаСтекПути("Module.bsl");
	ПосетитьМодуль(ОбъектФорма.ПолноеИмя() + ".МодульФормы", Окружение, Свойства);
	УдалитьСоСтекаПути();
	УдалитьСоСтекаПути(Перечисления.ФорматыВыгрузки.XML);
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектФорма Цикл
		Подписка.ПокинутьОбъектФорма(ОбъектФорма);
	КонецЦикла;
		
	УдалитьСоСтекаПути();
	
КонецПроцедуры

Функция ДанныеФормы()
	
	Путь = ПутьСтрокой();
	
	Если ТекущийФорматВыгрузки = Перечисления.ФорматыВыгрузки.XML Тогда
		Возврат ДанныеФормыXML(Путь);
	ИначеЕсли ТекущийФорматВыгрузки = Перечисления.ФорматыВыгрузки.EDT Тогда
		Возврат ДанныеФормыEDT(Путь);
	Иначе
		ВызватьИсключение "Неизвестный формат выгрузки";
	КонецЕсли; 
	
КонецФункции 

Функция ДанныеФормыXML(Путь)
	
	// прототип
	
	Файл = Новый Файл(Путь);
	
	Реквизиты = Новый Массив;
	ОсновнойРеквизит = Неопределено;
	
	Если Файл.Существует() Тогда
		
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.ОткрытьФайл(Путь);
		ЧтениеXML.Прочитать();
		Инвариант(ЧтениеXML.Имя = "Form");
		
		Пока ЧтениеXML.Прочитать() И ЧтениеXML.Имя <> "Attributes" Цикл
			ЧтениеXML.Пропустить();
			Инвариант(ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента);
		КонецЦикла; 
		
		Если ЧтениеXML.Имя = "Attributes" Тогда
			Пока ЧтениеXML.Прочитать() И ЧтениеXML.Имя = "Attribute" Цикл
				ИмяРеквизита = ЧтениеXML.ЗначениеАтрибута("name");
				Инвариант(ИмяРеквизита <> Неопределено);
				РеквизитФормы = Радар_Типы.РеквизитФормы(ИмяРеквизита);
				Реквизиты.Добавить(РеквизитФормы);
				Если ОсновнойРеквизит = Неопределено Тогда
					ТипРеквизита = Неопределено;
					ЭтоОсновнойРеквизит = Ложь;
					Пока ЧтениеXML.Прочитать() Цикл
						Если ЧтениеXML.Имя = "Attribute" И ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
							Прервать;
						ИначеЕсли ТипРеквизита = Неопределено
							И ЧтениеXML.Имя = "v8:Type"
							И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
							И ЧтениеXML.Прочитать()
							И ЧтениеXML.Имя = "#text" Тогда
							ТипРеквизита = ЧтениеXML.Значение;
							Если СтрНачинаетсяС(ТипРеквизита, "cfg:") Тогда
								ТипРеквизита = Сред(ТипРеквизита, 5);
							КонецЕсли; 
						ИначеЕсли Не ЭтоОсновнойРеквизит
							И ЧтениеXML.Имя = "MainAttribute"
							И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
							И ЧтениеXML.Прочитать()
							И ЧтениеXML.Имя = "#text" Тогда
							Если ЧтениеXML.Значение = "true" Тогда
								ЭтоОсновнойРеквизит = Истина;
							КонецЕсли; 
						КонецЕсли; 
					КонецЦикла;
					Если ЭтоОсновнойРеквизит Тогда
						ОсновнойРеквизит = Радар_Типы.РеквизитФормы(ИмяРеквизита, ТипРеквизита);
					КонецЕсли; 
				Иначе
					ЧтениеXML.Пропустить();
				КонецЕсли; 
				Инвариант(ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента);
			КонецЦикла;
		КонецЕсли; 
		
		ЧтениеXML.Закрыть();
	
	КонецЕсли;
	
	ДанныеФормы = Новый Структура;
	ДанныеФормы.Вставить("Реквизиты", Реквизиты);
	ДанныеФормы.Вставить("ОсновнойРеквизит", ОсновнойРеквизит);
	
	Возврат ДанныеФормы;
	
КонецФункции 

Функция ДанныеФормыEDT(Путь)
	
	// прототип
	
	Файл = Новый Файл(Путь);
	
	Реквизиты = Новый Массив;
	ОсновнойРеквизит = Неопределено;
	
	Если Файл.Существует() Тогда
		
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.ОткрытьФайл(Путь);
		ЧтениеXML.Прочитать();
		Инвариант(ЧтениеXML.Имя = "form:Form");
		
		Пока ЧтениеXML.Прочитать() Цикл
			 
			Если ЧтениеXML.Имя = "attributes" Тогда
				ИмяРеквизита = Неопределено;
				ТипРеквизита = Неопределено;
				ЭтоОсновнойРеквизит = Ложь;
				Пока ЧтениеXML.Прочитать() Цикл
					Если ЧтениеXML.Имя = "attributes" И ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
						Прервать;
					ИначеЕсли ИмяРеквизита = Неопределено
						И ЧтениеXML.Имя = "name"
						И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
						И ЧтениеXML.Прочитать()
						И ЧтениеXML.Имя = "#text" Тогда
						ИмяРеквизита = ЧтениеXML.Значение;
						Инвариант(ИмяРеквизита <> Неопределено);
						РеквизитФормы = Радар_Типы.РеквизитФормы(ИмяРеквизита);
						Реквизиты.Добавить(РеквизитФормы);
					ИначеЕсли ТипРеквизита = Неопределено
						И ЧтениеXML.Имя = "valueType"
						И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
						И ЧтениеXML.Прочитать()
						И ЧтениеXML.Имя = "types"
						И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
						И ЧтениеXML.Прочитать()
						И ЧтениеXML.Имя = "#text" Тогда
						ТипРеквизита = ЧтениеXML.Значение;
					ИначеЕсли Не ЭтоОсновнойРеквизит
						И ЧтениеXML.Имя = "main"
						И ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента
						И ЧтениеXML.Прочитать()
						И ЧтениеXML.Имя = "#text" Тогда
						Если ЧтениеXML.Значение = "true" Тогда
							ЭтоОсновнойРеквизит = Истина;
						КонецЕсли;
					КонецЕсли; 
				КонецЦикла;
				Если ЭтоОсновнойРеквизит Тогда
					ОсновнойРеквизит = Радар_Типы.РеквизитФормы(ИмяРеквизита, ТипРеквизита);
				КонецЕсли;  
				Инвариант(ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента);
			ИначеЕсли ЧтениеXML.Имя = "form:Form" Тогда
				Инвариант(ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента);
			Иначе
				ЧтениеXML.Пропустить();
				Инвариант(ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента);
			КонецЕсли; 
		
		КонецЦикла; 
		
		ЧтениеXML.Закрыть();
		
	КонецЕсли;
	
	ДанныеФормы = Новый Структура;
	ДанныеФормы.Вставить("Реквизиты", Реквизиты);
	ДанныеФормы.Вставить("ОсновнойРеквизит", ОсновнойРеквизит);
	
	Возврат ДанныеФормы;
	
КонецФункции 

Процедура Инвариант(Условие, ТекстИсключения = Неопределено)
	
	Если Не Условие Тогда
		Если ТекстИсключения = Неопределено Тогда
			ТекстИсключения = НСтр(
				"ru = 'нарушение протокола';
				|en = 'violation of protocol'"
			);
		КонецЕсли; 
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПосетитьОбъектФункциональнаяОпция(ОбъектФункциональнаяОпция) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектФункциональнаяОпция Цикл
		Подписка.ПосетитьОбъектФункциональнаяОпция(ОбъектФункциональнаяОпция);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектФункциональнаяОпция Цикл
		Подписка.ПокинутьОбъектФункциональнаяОпция(ОбъектФункциональнаяОпция);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектФункция(ОбъектФункция) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектФункция Цикл
		Подписка.ПосетитьОбъектФункция(ОбъектФункция);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектФункция Цикл
		Подписка.ПокинутьОбъектФункция(ОбъектФункция);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектХранилищеНастроек(ОбъектХранилищеНастроек) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектХранилищеНастроек Цикл
		Подписка.ПосетитьОбъектХранилищеНастроек(ОбъектХранилищеНастроек);
	КонецЦикла;
	
	ДобавитьНаСтекПути(ОбъектХранилищеНастроек.Имя);
		
	ПосетитьМакеты(ОбъектХранилищеНастроек.Макеты);
	ПосетитьФормы(ОбъектХранилищеНастроек.Формы);
		
	ПосетитьМодульМенеджера(ОбъектХранилищеНастроек, "ОкружениеМенеджераХранилищаНастроек");
	
	УдалитьСоСтекаПути();
	
	Для Каждого Подписка Из Подписки.ПокинутьОбъектХранилищеНастроек Цикл
		Подписка.ПокинутьОбъектХранилищеНастроек(ОбъектХранилищеНастроек);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектШаблонURLHTTPСервиса(ОбъектШаблонURLHTTPСервиса) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектШаблонURLHTTPСервиса Цикл
		Подписка.ПосетитьОбъектШаблонURLHTTPСервиса(ОбъектШаблонURLHTTPСервиса);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектШаблонURLHTTPСервиса Цикл
		Подписка.ПокинутьОбъектШаблонURLHTTPСервиса(ОбъектШаблонURLHTTPСервиса);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектЭлементСтиля(ОбъектЭлементСтиля) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектЭлементСтиля Цикл
		Подписка.ПосетитьОбъектЭлементСтиля(ОбъектЭлементСтиля);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектЭлементСтиля Цикл
		Подписка.ПокинутьОбъектЭлементСтиля(ОбъектЭлементСтиля);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОбъектЯзык(ОбъектЯзык) 
	
	Для Каждого Подписка Из Подписки.ПосетитьОбъектЯзык Цикл
		Подписка.ПосетитьОбъектЯзык(ОбъектЯзык);
	КонецЦикла;

	Для Каждого Подписка Из Подписки.ПокинутьОбъектЯзык Цикл
		Подписка.ПокинутьОбъектЯзык(ОбъектЯзык);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПосетитьОписаниеСтандартногоРеквизита(ОписаниеСтандартногоРеквизита)
	
	Для Каждого Подписка Из Подписки.ПосетитьОписаниеСтандартногоРеквизита Цикл
		Подписка.ПосетитьОписаниеСтандартногоРеквизита(ОписаниеСтандартногоРеквизита);
	КонецЦикла;
	
	Для Каждого Подписка Из Подписки.ПокинутьОписаниеСтандартногоРеквизита Цикл
		Подписка.ПокинутьОписаниеСтандартногоРеквизита(ОписаниеСтандартногоРеквизита);
	КонецЦикла;
	
КонецПроцедуры

Подписки = Новый Структура(
	"ПосетитьОбъектHTTPСервис,                      ПокинутьОбъектHTTPСервис,"
	"ПосетитьОбъектWebСервис,                       ПокинутьОбъектWebСервис,"
	"ПосетитьОбъектWSСсылка,                        ПокинутьОбъектWSСсылка,"
	"ПосетитьОбъектБизнесПроцесс,                   ПокинутьОбъектБизнесПроцесс,"
	"ПосетитьОбъектВнешнийИсточникДанных,           ПокинутьОбъектВнешнийИсточникДанных,"
	"ПосетитьОбъектГрафа,                           ПокинутьОбъектГрафа,"
	"ПосетитьОбъектГруппаКоманд,                    ПокинутьОбъектГруппаКоманд,"
	"ПосетитьОбъектДокумент,                        ПокинутьОбъектДокумент,"
	"ПосетитьОбъектЖурналДокументов,                ПокинутьОбъектЖурналДокументов,"
	"ПосетитьОбъектЗадача,                          ПокинутьОбъектЗадача,"
	"ПосетитьОбъектЗначениеПеречисления,            ПокинутьОбъектЗначениеПеречисления,"
	"ПосетитьОбъектИзмерение,                       ПокинутьОбъектИзмерение,"
	"ПосетитьОбъектИнтерфейс,                       ПокинутьОбъектИнтерфейс,"
	"ПосетитьОбъектКоманда,                         ПокинутьОбъектКоманда,"
	"ПосетитьОбъектКонстанта,                       ПокинутьОбъектКонстанта,"
	"ПосетитьОбъектКритерийОтбора,                  ПокинутьОбъектКритерийОтбора,"
	"ПосетитьОбъектКуб,                             ПокинутьОбъектКуб,"
	"ПосетитьОбъектМакет,                           ПокинутьОбъектМакет,"
	"ПосетитьОбъектНумератор,                       ПокинутьОбъектНумератор,"
	"ПосетитьОбъектОбработка,                       ПокинутьОбъектОбработка,"
	"ПосетитьОбъектОбщаяКартинка,                   ПокинутьОбъектОбщаяКартинка,"
	"ПосетитьОбъектОбщаяКоманда,                    ПокинутьОбъектОбщаяКоманда,"
	"ПосетитьОбъектОбщийМодуль,                     ПокинутьОбъектОбщийМодуль,"
	"ПосетитьОбъектОбщийРеквизит,                   ПокинутьОбъектОбщийРеквизит,"
	"ПосетитьОбъектОперацияWebСервиса,              ПокинутьОбъектОперацияWebСервиса,"
	"ПосетитьОбъектОпределяемыйТип,                 ПокинутьОбъектОпределяемыйТип,"
	"ПосетитьОбъектОтчет,                           ПокинутьОбъектОтчет,"
	"ПосетитьОбъектПакетXDTO,                       ПокинутьОбъектПакетXDTO,"
	"ПосетитьОбъектПараметрWebСервиса,              ПокинутьОбъектПараметрWebСервиса,"
	"ПосетитьОбъектПараметрСеанса,                  ПокинутьОбъектПараметрСеанса,"
	"ПосетитьОбъектПараметрФункциональныхОпций,     ПокинутьОбъектПараметрФункциональныхОпций,"
	"ПосетитьОбъектПерерасчет,                      ПокинутьОбъектПерерасчет,"
	"ПосетитьОбъектПеречисление,                    ПокинутьОбъектПеречисление,"
	"ПосетитьОбъектПланВидовРасчета,                ПокинутьОбъектПланВидовРасчета,"
	"ПосетитьОбъектПланВидовХарактеристик,          ПокинутьОбъектПланВидовХарактеристик,"
	"ПосетитьОбъектПланОбмена,                      ПокинутьОбъектПланОбмена,"
	"ПосетитьОбъектПланСчетов,                      ПокинутьОбъектПланСчетов,"
	"ПосетитьОбъектПодпискаНаСобытие,               ПокинутьОбъектПодпискаНаСобытие,"
	"ПосетитьОбъектПодсистема,                      ПокинутьОбъектПодсистема,"
	"ПосетитьОбъектПоле,                            ПокинутьОбъектПоле,"
	"ПосетитьОбъектПоследовательность,              ПокинутьОбъектПоследовательность,"
	"ПосетитьОбъектПризнакУчетаПланаСчетов,         ПокинутьОбъектПризнакУчетаПланаСчетов,"
	"ПосетитьОбъектПризнакУчетаСубконтоПланаСчетов, ПокинутьОбъектПризнакУчетаСубконтоПланаСчетов,"
	"ПосетитьОбъектРегистрБухгалтерии,              ПокинутьОбъектРегистрБухгалтерии,"
	"ПосетитьОбъектРегистрНакопления,               ПокинутьОбъектРегистрНакопления,"
	"ПосетитьОбъектРегистрРасчета,                  ПокинутьОбъектРегистрРасчета,"
	"ПосетитьОбъектРегистрСведений,                 ПокинутьОбъектРегистрСведений,"
	"ПосетитьОбъектРегламентноеЗадание,             ПокинутьОбъектРегламентноеЗадание,"
	"ПосетитьОбъектРеквизит,                        ПокинутьОбъектРеквизит,"
	"ПосетитьОбъектРеквизитАдресации,               ПокинутьОбъектРеквизитАдресации,"
	"ПосетитьОбъектРесурс,                          ПокинутьОбъектРесурс,"
	"ПосетитьОбъектРоль,                            ПокинутьОбъектРоль,"
	"ПосетитьОбъектСправочник,                      ПокинутьОбъектСправочник,"
	"ПосетитьОбъектСтиль,                           ПокинутьОбъектСтиль,"
	"ПосетитьОбъектТаблица,                         ПокинутьОбъектТаблица,"
	"ПосетитьОбъектТаблицаИзмерения,                ПокинутьОбъектТаблицаИзмерения,"
	"ПосетитьОбъектТабличнаяЧасть,                  ПокинутьОбъектТабличнаяЧасть,"
	"ПосетитьОбъектФорма,                           ПокинутьОбъектФорма,"
	"ПосетитьОбъектФункциональнаяОпция,             ПокинутьОбъектФункциональнаяОпция,"
	"ПосетитьОбъектФункция,                         ПокинутьОбъектФункция,"
	"ПосетитьОбъектХранилищеНастроек,               ПокинутьОбъектХранилищеНастроек,"
	"ПосетитьОбъектШаблонURLHTTPСервиса,            ПокинутьОбъектШаблонURLHTTPСервиса,"
	"ПосетитьОбъектЭлементСтиля,                    ПокинутьОбъектЭлементСтиля,"
	"ПосетитьОбъектЯзык,                            ПокинутьОбъектЯзык,"
	"ПосетитьОписаниеСтандартногоРеквизита,         ПокинутьОписаниеСтандартногоРеквизита"
);

Для Каждого Элемент Из Подписки Цикл
	Подписки[Элемент.Ключ] = Новый Массив;
КонецЦикла;

СтекПути = Новый Массив;
Модули = Новый Массив;