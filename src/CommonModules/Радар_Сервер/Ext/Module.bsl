
Процедура СообщитьПолеНеЗаполнено(Объект, ИмяПоля, Отказ = Неопределено, Знач СинонимПоля = Неопределено) Экспорт
	
	Если СинонимПоля = Неопределено Тогда
		СинонимПоля = Объект.Метаданные().Реквизиты[ИмяПоля].Синоним;
	КонецЕсли; 
	
	Шаблон = НСтр("ru = 'Поле ""%1"" не заполнено'");
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.УстановитьДанные(Объект);
	Сообщение.Поле = ИмяПоля;
	Сообщение.Текст = СтрШаблон(Шаблон, СинонимПоля);
	Сообщение.Сообщить();
	
	Отказ = Истина;
	
КонецПроцедуры 

Функция ВыгрузитьОшибкиВСонар(Проект) Экспорт
	
	// https://docs.sonarqube.org/latest/analysis/generic-issue/
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Радар_ПроверкиСрезПоследних.Проект КАК Проект,
	|	Радар_ПроверкиСрезПоследних.Модуль КАК Модуль,
	|	Радар_ПроверкиСрезПоследних.Путь КАК Путь,
	|	Радар_Ошибки.Текст КАК Текст,
	|	Радар_Ошибки.ПозицияНачала КАК ПозицияНачала,
	|	Радар_Ошибки.НомерСтрокиНачала КАК НомерСтрокиНачала,
	|	Радар_Ошибки.НомерКолонкиНачала КАК НомерКолонкиНачала,
	|	Радар_Ошибки.ПозицияКонца КАК ПозицияКонца,
	|	Радар_Ошибки.НомерСтрокиКонца КАК НомерСтрокиКонца,
	|	Радар_Ошибки.НомерКолонкиКонца КАК НомерКолонкиКонца,
	|	Радар_Ошибки.ЕстьЗамена КАК ЕстьЗамена,
	|	Радар_Ошибки.Источник КАК Источник,
	|	Радар_Ошибки.Код КАК Код,
	|	Радар_Ошибки.МинутНаИсправление КАК МинутНаИсправление,
	|	Радар_Ошибки.Серьезность КАК Серьезность,
	|	Радар_Ошибки.Приоритет КАК Приоритет,
	|	Радар_Ошибки.Правило КАК Правило,
	|	Радар_Ошибки.Тип КАК Тип
	|ИЗ
	|	РегистрСведений.Радар_Проверки.СрезПоследних(, Проект = &Проект) КАК Радар_ПроверкиСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Радар_Ошибки КАК Радар_Ошибки
	|		ПО Радар_ПроверкиСрезПоследних.Регистратор = Радар_Ошибки.Регистратор
	|			И Радар_ПроверкиСрезПоследних.Проект = Радар_Ошибки.Проект
	|			И Радар_ПроверкиСрезПоследних.Модуль = Радар_Ошибки.Модуль
	|ГДЕ
	|	НЕ Радар_ПроверкиСрезПоследних.НеОбнаружен";
	
	ВыборкаОшибок = Запрос.Выполнить().Выбрать();
	
	Проблемы = Новый Массив;
	
	Пока ВыборкаОшибок.Следующий() Цикл

		Диапазон = Новый Структура;
		Диапазон.Вставить("startLine", ВыборкаОшибок.НомерСтрокиНачала);
		Диапазон.Вставить("endLine", ВыборкаОшибок.НомерСтрокиКонца);
		Диапазон.Вставить("startColumn", ВыборкаОшибок.НомерКолонкиНачала - 1);
		Диапазон.Вставить("endColumn", ВыборкаОшибок.НомерКолонкиКонца - 1);

		Место = Новый Структура;
		Место.Вставить("message", ВыборкаОшибок.Текст);
		Место.Вставить("filePath", ВыборкаОшибок.Путь);
		Место.Вставить("textRange", Диапазон);

		Проблема = Новый Структура;
		Проблема.Вставить("engineId", "radar");
		Проблема.Вставить("ruleId", ВыборкаОшибок.Правило);
		Проблема.Вставить("severity", ВыборкаОшибок.Серьезность);
		Проблема.Вставить("type", ВыборкаОшибок.Тип);
		Проблема.Вставить("primaryLocation", Место);
		Проблема.Вставить("effortMinutes", ВыборкаОшибок.МинутНаИсправление);
		Проблемы.Добавить(Проблема);

	КонецЦикла;

	Отчет = Новый Структура("issues", Проблемы);

	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Unix));
	ЗаписатьJSON(ЗаписьJSON, Отчет);
	ТекстОтчета = ЗаписьJSON.Закрыть();
	
	Адрес = ПоместитьВоВременноеХранилище(ТекстОтчета); 
	
	Возврат Адрес;
	
КонецФункции
 