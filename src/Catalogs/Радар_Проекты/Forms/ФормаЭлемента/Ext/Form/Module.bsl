
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтотОбъект.ЭтоФайловаяБаза = Радар_КлиентСервер.ЭтоФайловаяБаза();
	
	УстановитьВидимость(ЭтотОбъект);
	УстановитьДоступность(ЭтотОбъект);
	УстановитьУсловноеОформление();
	
КонецПроцедуры

#КонецОбласти

#Область СобытияЭлементов

&НаКлиенте
Процедура ВнешняяКонфигурацияПриИзменении(Элемент)
	
	УстановитьВидимость(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКонфигурацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Радар_Клиент.ВыбратьПуть(Элемент, ЭтотОбъект, РежимДиалогаВыбораФайла.Открытие, "(*.cf; *.cfe)|*.cf;*.cfe");
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьВыгрузкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Радар_Клиент.ВыбратьПуть(Элемент, ЭтотОбъект, РежимДиалогаВыбораФайла.ВыборКаталога);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМногопоточностьПриИзменении(Элемент)
	
	УстановитьВидимость(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимость(ЭтотОбъект)
	
	Объект = ЭтотОбъект.Объект;
	Элементы = ЭтотОбъект.Элементы;
	
	Элементы.ПутьКонфигурации.Видимость = Объект.ВнешняяКонфигурация;
	Элементы.ГруппаНастройкиМногопоточногоАнализа.Видимость = Объект.ИспользоватьМногопоточность И Не ЭтотОбъект.ЭтоФайловаяБаза;
	
КонецПроцедуры 

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступность(ЭтотОбъект)
	
	Объект = ЭтотОбъект.Объект;
	Элементы = ЭтотОбъект.Элементы;
		
	Элементы.ИспользоватьМногопоточность.Доступность = Не ЭтотОбъект.ЭтоФайловаяБаза;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// справка: ОформлениеКомпоновкиДанных
	
	УстановитьУсловноеОформлениеПоляПутьКонфигурации();	
	
КонецПроцедуры

&НаСервере 
Процедура УстановитьУсловноеОформлениеПоляПутьКонфигурации()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ГруппаИ = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ГруппаИ.Использование = Истина;
	
	Отбор = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ВнешняяКонфигурация");
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Отбор.ПравоеЗначение = Истина;
	
	Отбор = ГруппаИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Отбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ПутьКонфигурации");
	Отбор.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	Свойство = Элемент.Оформление.Элементы.Найти("ОтметкаНезаполненного");
	Свойство.Значение = Истина;
	Свойство.Использование = Истина;
	
	Поле = Элемент.Поля.Элементы.Добавить();
	Поле.Поле = Новый ПолеКомпоновкиДанных("ПутьКонфигурации");
	Поле.Использование = Истина;
	
КонецПроцедуры
