
Перем Типы;
Перем ТаблицаОшибок;

Перем ИменаМетодовВставки;

Процедура Открыть(Парсер, Параметры) Экспорт
	
	Типы = Парсер.Типы();
	ТаблицаОшибок = Парсер.ТаблицаОшибок();
	
	ИменаМетодовВставки = Новый Структура;
	ИменаМетодовВставки.Вставить("Вставить");
	ИменаМетодовВставки.Вставить("Insert");
	ИменаМетодовВставки.Вставить("Добавить");
	ИменаМетодовВставки.Вставить("Add");
	
КонецПроцедуры

Функция Закрыть() Экспорт
	
	Возврат Неопределено;
	
КонецФункции

Функция Подписки() Экспорт
	Перем Подписки;
	Подписки = Новый Массив;
	Подписки.Добавить("ПосетитьОператорВызоваПроцедуры");
	Подписки.Добавить("ПосетитьОператорПрисваивания");
	Возврат Подписки;
КонецФункции

#Область РеализацияПодписок

Процедура ПосетитьОператорПрисваивания(ОператорПрисваивания) Экспорт
	
	ЛевыйОперанд = ОператорПрисваивания.ЛевыйОперанд;
	
	Если ЛевыйОперанд.Хвост.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	ПравыйОперанд = ОператорПрисваивания.ПравыйОперанд;
	
	Если ПравыйОперанд.Тип = Типы.ВыражениеИдентификатор
		И ПравыйОперанд.Хвост.Количество() = 0
		И ЛевыйОперанд.Голова = ПравыйОперанд.Голова Тогда
		
		Ошибка("Вставка коллекции в саму себя", ОператорПрисваивания.Начало, ОператорПрисваивания.Конец);
		
	КонецЕсли; 
	
КонецПроцедуры 

Процедура ПосетитьОператорВызоваПроцедуры(ОператорВызоваПроцедуры) Экспорт
	
	Голова = ОператорВызоваПроцедуры.Идентификатор.Голова;
	Хвост = ОператорВызоваПроцедуры.Идентификатор.Хвост;
	
	Если Хвост.Количество() = 1 Тогда
		
		Элемент = Хвост[0];
		
		Если Элемент.Тип = Типы.ВыражениеПоле
			И Элемент.Аргументы <> Неопределено
			И ИменаМетодовВставки.Свойство(Элемент.Имя) Тогда
			
			Для Каждого Выражение Из Элемент.Аргументы Цикл
				
				Если Выражение <> Неопределено
					И Выражение.Тип = Типы.ВыражениеИдентификатор
					И Выражение.Голова = Голова
					И Выражение.Хвост.Количество() = 0 Тогда
					
					Ошибка("Вставка коллекции в саму себя", ОператорВызоваПроцедуры.Начало, ОператорВызоваПроцедуры.Конец);
					
				КонецЕсли; 
				
			КонецЦикла; 
			
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Процедура Ошибка(Текст, Начало, Конец = Неопределено, ЕстьЗамена = Ложь)
	
	Ошибка = ТаблицаОшибок.Добавить();
	Ошибка.Источник = Метаданные().Имя;
	Ошибка.Текст = Текст;
	
	Ошибка.МинутНаИсправление = 5;
	Ошибка.Серьезность = "INFO";
	Ошибка.Приоритет = 0;
	Ошибка.Правило = Метаданные().Синоним;
	Ошибка.Тип = "CODE_SMELL";
	
	Ошибка.ПозицияНачала = Начало.Позиция;
	Ошибка.НомерСтрокиНачала = Начало.НомерСтроки;
	Ошибка.НомерКолонкиНачала = Начало.НомерКолонки;
	Если Конец = Неопределено Или Конец = Начало Тогда
		Ошибка.ПозицияКонца = Начало.Позиция + Начало.Длина;
		Ошибка.НомерСтрокиКонца = Начало.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Начало.НомерКолонки + Начало.Длина;
	Иначе
		Ошибка.ПозицияКонца = Конец.Позиция + Конец.Длина;
		Ошибка.НомерСтрокиКонца = Конец.НомерСтроки;
		Ошибка.НомерКолонкиКонца = Конец.НомерКолонки + Конец.Длина;
	КонецЕсли;
	
	Ошибка.ЕстьЗамена = ЕстьЗамена;
	
КонецПроцедуры
